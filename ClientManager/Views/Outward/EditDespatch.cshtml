@model ClientManager.Models.OutwardData
@{
    //ViewBag.Title = "Create";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var currentUser = (ClientManager.Models.UserDetails)Session["UserDetails"];
}
<style>
    textarea {
        width: 100% !important;
        border: 1px solid #ced4da !important;
        border-radius: .25rem !important;
        padding: .375rem .75rem !important;
    }

    fieldset {
        background-color: #fff;
        border: 1px solid #ced4da;
        padding: 5px 10px;
    }

    legend {
        background-color: #fff;
        color: #351ded;
        padding: 2px 5px;
        border-radius: .25rem !important;
        width: auto;
        font-size: 1.1rem;
        font-weight: bold;
    }
</style>
<script src="~/Content/plugins/jspdf.min.js_1.5.3/cdnjs/jspdf.min.js"></script>
<!-- Main content -->
<div id="divPrintable">
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- jquery validation -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Despatch</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->

                        <form id="quickFormPopup">
                            <div class="card-body">
                                <div id="pnlInvoice" style="display:none">
                                    <fieldset>
                                        <legend>Invoice Details</legend>
                                        <div class="row">
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="InvoiceNumber">Invoice Number</label>
                                                    <div class="input-group date" data-target-input="nearest">
                                                        <input type="hidden" id="hdnId" value="@Model.Id" />
                                                        @*@Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @id = "hdnId", @name= "hdnId" } })*@
                                                        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtInvoiceNumber", @name = "InvoiceNumber", @readonly = "readonly" } })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="CustomerName">Customer Name</label>
                                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @id = "txtCustomerName", @name = "CustomerName", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="InvoiceDate">Invoice Date</label>
                                                    <div class="input-group date" data-target-input="nearest">
                                                        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtInvoiceDate", @name = "InvoiceDate", @readonly = "readonly" } })
                                                        <div class="input-group-append" data-target="#txtInvoiceDate" data-toggle="datetimepicker">
                                                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="status">Status</label>
                                                    @Html.HiddenFor(model => model.Status, new { htmlAttributes = new { @id = "hdnStatus" } })
                                                    @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus", @onChange = "fnStatusChange()", @readonly = "readonly" })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label for="Comments">Comments</label>
                                                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @id = "txtComments", @name = "Comments", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                        </div>
                                    </fieldset>
                                    <br />
                                </div>
                                <div class="well clearfix">
                                    @*<a style="float:right; width:150px" class="btn btn-block btn-primary btn-xs" data-added="0" id="btnSavePDF" onclick="javascript:saveDiv('divPrintable','Invoice Details')">Show Invoice</a>
                                    <a style="float:right; width:150px" class="btn btn-block btn-primary btn-xs" data-added="0" id="btnPrint" onclick="javascript:printDiv('divPrintable','Invoice Details')">Show Invoice</a>*@
                                    <a style="float:right; width:150px" class="btn btn-block btn-primary btn-xs" data-added="0" id="btnToggle" onclick="javascript:fnHideShow(this)">Show Invoice</a>
                                </div>
                                <fieldset>
                                    <legend>Despatch Details</legend>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="DespatchNo">Despatch No</label>
                                                <input type="hidden" id="hdnDespatchId" value="@Model.DespatchData.FirstOrDefault().Id" />
                                                @*@Html.HiddenFor(model => model.DespatchData.FirstOrDefault().Id, new { htmlAttributes = new { @id = "hdnDespatchId", @name = "hdnDespatchId" } })*@
                                                @Html.EditorFor(model => model.DespatchData.FirstOrDefault().DespatchNo, new { htmlAttributes = new { @class = "form-control", @id = "txtDespatchNo", @name = "DespatchNo", @readonly = "readonly" } })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="DespatchDate">Despatch Date</label>
                                                <div class="input-group date" data-target-input="nearest">
                                                    @Html.EditorFor(model => model.DespatchData.FirstOrDefault().DespatchDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtDespatchDate", @name = "DespatchDate" } })
                                                    <div class="input-group-append" data-target="#txtDespatchDate" data-toggle="datetimepicker">
                                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="LRNumber">LR Number</label>
                                                @Html.EditorFor(model => model.DespatchData.FirstOrDefault().LRNumber, new { htmlAttributes = new { @class = "form-control", @id = "txtLRNumber", @name = "LRNumber" } })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="Comments">Transport By</label>
                                                @Html.EditorFor(model => model.DespatchData.FirstOrDefault().TransportBy, new { htmlAttributes = new { @class = "form-control", @id = "txtTransportBy", @name = "TransportBy" } })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="Comments">Ship To</label>
                                                @Html.EditorFor(model => model.DespatchData.FirstOrDefault().ShipToCity, new { htmlAttributes = new { @class = "form-control", @id = "txtShipToCity", @name = "ShipToCity" } })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="PaymentStatus">Payment Status</label>
                                                @Html.HiddenFor(model => model.DespatchData.FirstOrDefault().PaymentStatus, new { htmlAttributes = new { @id = "hdnPaymentStatus" } })
                                                @Html.DropDownList("PaymentStatus", ViewBag.PaymentStatus as SelectList, htmlAttributes: new { @class = "form-control select2", @id = "ddlPaymentStatus", @onChange = "fnStatusChange()" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <fieldset>
                                                <legend>Products</legend>
                                                @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                                                {
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label for="status">Material</label>
                                                                <input type="hidden" name="MaterialId" id="hdnMaterialId" />
                                                                @Html.DropDownList("MaterialId", ViewBag.MaterialId as SelectList, htmlAttributes: new { @class = "form-control select2", @id = "ddlMaterialId", @onChange = "fnValueChange('material')" })

                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label for="status">Product Master</label>
                                                                <input type="hidden" name="TypeId" id="hdnTypeId" />
                                                                @Html.DropDownList("TypeId", ViewBag.TypeId as SelectList, htmlAttributes: new { @class = "form-control select2", @id = "ddlTypeId", @onChange = "fnValueChange('type')" })
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                <label for="status">Product</label>
                                                                <input type="hidden" name="ItemId" id="hdnItemId" />
                                                                @Html.DropDownList("ItemId", ViewBag.TypeId as SelectList, htmlAttributes: new { @class = "form-control select2", @id = "ddlItemId", @onChange = "fnValueChange('item')" })
                                                            </div>
                                                        </div>
                                                        <div class="col-md-3">
                                                            <div class="form-group">
                                                                <label for="AvailableQuantity">Available Quantity</label>
                                                                @Html.Editor("AvailableQuantity", new { htmlAttributes = new { @class = "form-control", @id = "txtAvailableQuantity", @name = "txtAvailableQuantity", @readonly = "readonly" } })
                                                            </div>
                                                        </div>
                                                        <div class="col-md-3">
                                                            <div class="form-group">
                                                                <label for="Quantity">Quantity</label>
                                                                @Html.Editor("Quantity", new { htmlAttributes = new { @class = "form-control", @id = "txtQuantity", @name = "Quantity" } })
                                                            </div>
                                                        </div>
                                                        @*<div class="col-md-12">
                                                                <div class="form-group">
                                                                    <label for="Remarks">Remarks</label>
                                                                    <input type="text" class="form-control" id="txtRemarks" name="Remarks" />
                                                                </div>
                                                            </div>*@
                                                    </div>
                                                }
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                                                        {
                                                            <div class="well clearfix">
                                                                <a style="float:right; width:150px" class="btn btn-block btn-primary btn-sm add-record" data-added="0"><i class="fa fa-plus"></i> Add Product</a>
                                                            </div>
                                                        }
                                                        <br />
                                                        <table class="table table-bordered" id="tbl_posts">
                                                            <thead>
                                                                <tr>
                                                                    <th>#</th>
                                                                    <th>Material</th>
                                                                    <th>Product Master</th>
                                                                    <th>Product</th>
                                                                    <th>Quantity</th>
                                                                    @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                                                                    {
                                                                        <th>Action</th>
                                                                    }
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbl_posts_body">
                                                                @if (Model.DespatchData.FirstOrDefault() != null)
                                                                {
                                                                    if (Model.DespatchData.FirstOrDefault().DespatchItems != null && Model.DespatchData.FirstOrDefault().DespatchItems.Count() > 0)
                                                                    {
                                                                        int i = 1;
                                                                        foreach (var item in Model.DespatchData.FirstOrDefault().DespatchItems)
                                                                        {
                                                                            if (item.Id > 0)
                                                                            {
                                                                                <tr id="rec-@item.Id" data-added="@item.Id">
                                                                                    <td><span class="sn"></span>@i.</td>
                                                                                    <td class="Meterial" data-added="@item.MaterialId">
                                                                                        @item.MaterialName
                                                                                    </td>
                                                                                    <td class="Type" data-added="@item.TypeId">
                                                                                        @item.TypeName
                                                                                    </td>
                                                                                    <td class="Item" data-added="@item.ItemId">
                                                                                        @item.ItemName
                                                                                    </td>
                                                                                    <td class="Quantity">
                                                                                        @item.Quantity
                                                                                    </td>
                                                                                    @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                                                                                    {
                                                                                        <td>
                                                                                            <a class="btn btn-primary btn-xs edit-record" style="margin-left:5px" data-id="@item.Id"><i class="far fa-edit"></i></a><a class="btn btn-danger btn-xs delete-record" style="margin-left:5px" data-id="@item.Id"><i class="far fa-trash-alt"></i></a>
                                                                                        </td>
                                                                                    }
                                                                                </tr>

                                                                                i++;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            </tbody>
                                                        </table>
                                                        <div style="display:none;">
                                                            <input type="hidden" id="itemRowId" />
                                                            <table id="sample_table">
                                                                <tr id="" data-added="">
                                                                    <td><span class="sn"></span>.</td>
                                                                    <td class="Meterial" data-added="">
                                                                    </td>
                                                                    <td class="Type" data-added="">
                                                                    </td>
                                                                    <td class="Item" data-added="">
                                                                    </td>
                                                                    <td class="Quantity"></td>
                                                                    <td>
                                                                        <a class="btn btn-primary btn-xs edit-record" style="margin-left:5px" data-id="0"><i class="far fa-edit"></i></a><a class="btn btn-danger btn-xs delete-record" style="margin-left:5px" data-id="0"><i class="far fa-trash-alt"></i></a>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="card-footer">
                                @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin"))
                                {
                                    <button type="submit" class="btn btn-primary">Update Despatch</button>
                                }
                                @*<button type="button" class="btn btn-danger">Cancel</button>*@
                            </div>
                            <!-- /.card-body -->
                        </form>
                    </div>

                </div>
                <!-- /.card -->
            </div>

            <!--/.col (left) -->
            <!-- right column -->
            <div class="col-md-6">

            </div>
            <!--/.col (right) -->
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<script>

    $(window).on('load', function () {

        if ('@ViewBag.AccessLevel' == "View") {
            $('#quickFormPopup :input').each(function () {
                
                if ($(this).attr('Id') != 'btnBack') {

                    $(this).prop('disabled', true);
                }
            });
        }



        //$('#txtInvoiceDate').val('');
        $('#txtQuantity').val(0);
        $('#txtAvailableQuantity').val(0);

    });


    $(function () {

        $.validator.setDefaults({
            submitHandler: function () {

                //fnSubmitDespatchDetails();
            }
        });
        $('#quickFormPopup').validate({

            rules: {
                saleDate: {
                    required: true,
                },
                clientName: {
                    required: true,
                },
            },
            messages: {
                saleDate: {
                    required: "Please enter a email address",
                },
                clientName: {
                    required: "Please provide a password",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            },
            submitHandler: function () {

                fnSubmitDespatchDetails();
            }

        });
    });


    function fnStatusChange() {
        $("input[name=PaymentStatus]").val($('#ddlPaymentStatus').val());
        $("input[name=Status]").val($('#ddlStatus').val());
    }

    function fnValueChange(evntFrom) {

        if (evntFrom == "material") {
            $("input[name=MaterialId]").val($('#ddlMaterialId').val());
            fnBindTypesDropdown($("input[name=MaterialId]").val());
            fnBindItemsDropDown($("input[name=TypeId]").val());
        }
        else if (evntFrom == "type") {
            $("input[name=TypeId]").val($('#ddlTypeId').val());
            fnBindItemsDropDown($("input[name=TypeId]").val());
        }
        else if (evntFrom == "item") {
            $("input[name=ItemId]").val($('#ddlItemId').val());
            fnGetAvailableQuantity($("input[name=ItemId]").val());
        }
    }
    function fnBindTypesDropdown(id, selectedValue) {

        $.ajax({
            url: "/types/GetProductMaster?materialId=" + id,
            type: "Get",
            success: function (data) {

                $('#ddlTypeId').empty();
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlTypeId').append(opt);
                }

                if (selectedValue != null) {
                    $('#ddlTypeId').val(selectedValue);
                }
            }
        });

    }
    function fnBindItemsDropDown(id, selectedValue) {

        $.ajax({
            url: "/items/GetProducts?prodMasterId=" + id,
            type: "Get",
            success: function (data) {

                $('#ddlItemId').empty();
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlItemId').append(opt);
                }
                if (selectedValue != null) {
                    $('#ddlItemId').val(selectedValue);
                }
            }
        });

        $('#txtAvailableQuantity').val('0');
        $("input[name=ItemId]").val($('#ddlItemId').val());
    }
    function fnGetAvailableQuantity(id) {

        $.ajax({
            url: "/Outward/GetAvailableQuantity?itemId=" + id,
            type: "Get",
            success: function (data) {
                $('#txtAvailableQuantity').val(data);
            }
        });
    }

    //Add
    $(document).delegate('a.add-record', 'click', function (e) {
        e.preventDefault();
        if ($('#itemRowId').val() != '' && $('#itemRowId').val() != null) {

            var currRowId = $('#itemRowId').val();
            var element = $('tr#' + currRowId);


            // $('#' + $('#itemRowId').val()).find('td.Material').text();
            element.find('.Meterial').text($('#ddlMaterialId option:selected').text());
            element.find('.Meterial').attr('data-added', $('#ddlMaterialId option:selected').val());
            element.find('.Type').text($('#ddlTypeId option:selected').text());
            element.find('.Type').attr('data-added', $('#ddlTypeId option:selected').val());
            element.find('.Item').text($('#ddlItemId option:selected').text());
            element.find('.Item').attr('data-added', $('#ddlItemId option:selected').val());
            element.find('.Quantity').text($('#txtQuantity').val());
        }
        else {

            $("input[name=TypeId]").val($('#ddlTypeId').val());
            $("input[name=MaterialId]").val($('#ddlMaterialId').val());
            $("input[name=ItemId]").val($('#ddlItemId').val());

            //fnAddOutwardItem();
            var content = jQuery('#sample_table tr'),
                size = jQuery('#tbl_posts >tbody >tr').length + 1,
                element = null,
                element = content.clone();
            element.attr('id', 'rec-' + size);

            if ($('#ddlMaterialId option:selected').text() == "Select" || $('#ddlTypeId option:selected').text() == "Select" || $('#ddlItemId option:selected').text() == "Select" || parseInt($('#txtQuantity').val()) <= 0) {
                alert('Enter all product details.');
                $('#txtQuantity').val("0");
                return false;
            }
            else {
                if (parseInt($('#txtQuantity').val()) > parseInt($('#txtAvailableQuantity').val())) {
                    alert("Quantity should be less than or equal to available quantity!");
                    $('#txtQuantity').val(0);
                    return false;
                }
                else {

                    element.find('.Meterial').text($('#ddlMaterialId option:selected').text());
                    element.find('.Meterial').attr('data-added', $('#ddlMaterialId option:selected').val());
                    element.find('.Type').text($('#ddlTypeId option:selected').text());
                    element.find('.Type').attr('data-added', $('#ddlTypeId option:selected').val());
                    element.find('.Item').text($('#ddlItemId option:selected').text());
                    element.find('.Item').attr('data-added', $('#ddlItemId option:selected').val());
                    element.find('.Quantity').text($('#txtQuantity').val());

                    element.find('.delete-record').attr('data-id', size);
                    element.find('.edit-record').attr('data-id', size);
                    element.appendTo('#tbl_posts_body');
                    element.find('.sn').html(size);
                }
            }

            //$(".add-record").text().replace("Update","Add");
        }

        //cleardata
        $('#txtQuantity').val(0);
        fnValueChange('material');
    });


    //Edit
    $(document).delegate('a.edit-record', 'click', function (e) {

        e.preventDefault();
        // $(this).parents('tr').attr("style", "background-color:#fafa0066");

        $('#ddlMaterialId').val($(this).parents('tr').find('.Meterial').attr('data-added'));
        $('#itemRowId').val($(this).parents('tr').attr('Id'));
        $("input[name=MaterialId]").val($(this).parents('tr').find('.Meterial').attr('data-added'));
        $("input[name=TypeId]").val($(this).parents('tr').find('.Type').attr('data-added'));

        fnBindTypesDropdown($("input[name=MaterialId]").val(), $(this).parents('tr').find('.Type').attr('data-added'));
        fnBindItemsDropDown($("input[name=TypeId]").val(), $(this).parents('tr').find('.Item').attr('data-added'));

        $("#txtQuantity").val($(this).parents('tr').find('.Quantity').text().trim());
        $("input[name=ItemId]").val($('#ddlItemId').val());
        //$(".add-record").text().replace("Add", "Update");
        fnGetAvailableQuantity($(this).parents('tr').find('.Item').attr('data-added'));
        return false;
    });

    //Delete
    $(document).delegate('a.delete-record', 'click', function (e) {
        e.preventDefault();

        var didConfirm = confirm("Are you sure You want to delete?");
        if (didConfirm == true) {
            var id = jQuery(this).attr('data-id');
            var targetDiv = jQuery(this).attr('targetDiv');
            jQuery('#rec-' + id).remove();

            //regnerate index number on table
            $('#tbl_posts_body tr').each(function (index) {
                //alert(index);
                $(this).find('span.sn').html(index + 1);
            });
            return true;
        } else {
            return false;
        }
    });


    function fnSubmitDespatchDetails() {

        let desItems = [];
        let desData = [];

        $('#tbl_posts_body tr').each(function () {

            desItems.push({
                Id: $(this).attr('data-added'),
                DespatchId: $("#hdnDespatchId").val(),
                MaterialId: $(this).find('.Meterial').attr('data-added'),
                TypeId: $(this).find('.Type').attr('data-added'),
                ItemId: $(this).find('.Item').attr('data-added'),
                Quantity: $(this).find('.Quantity').text(),
            });
        });
        fnStatusChange();
        var despatchData = {
            Id: $("#hdnDespatchId").val(),
            OutwardId: $("#hdnId").val(),
            DespatchNo: $("#txtDespatchNo").val(),
            DespatchDate: $("#txtDespatchDate").val(),
            LRNumber: $("#txtLRNumber").val(),
            PaymentStatus: $("input[name=PaymentStatus]").val(),
            TransportBy: $("#txtTransportBy").val(),
            ShipToCity: $("#txtShipToCity").val(),
            DespatchItems: desItems
        };

        $.ajax({
            type: "POST",
            url: "/Outward/EditDespatch",
            data: JSON.stringify(despatchData),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.status == "Success") {
                    alert(data.message);
                    window.location.href = data.redirectURL;
                }
                else {
                    alert(data.message);
                }
            },
            error: function () {
                alert("Error occured!!  " + data.message)
            }
        });
    }

    function fnHideShow(ctl) {
        $('#pnlInvoice').toggle();
        if ($(ctl).text() == "Show Invoice") {
            $(ctl).text('Hide Invoice');
        }
        else {
            $(ctl).text('Show Invoice');
        }
    }

    $("#mnuOutwardList").addClass("active");
    var parentMenu = $("#mnuOutwardList").parent().parent().parent();

    parentMenu.attr("class", "nav-item menu-is-opening menu-open");
    parentMenu.find("ul").each(function () {

        $(this).attr("style", "display:block");

    });

    if ('@ViewBag.Mode'=='New') {

        $('#quickFormPopup > div.card-footer > button.btn.btn-primary').text('Save Despatch');
       // $('#txtDespatchDate').val('');
        $('#txtDespatchDate').val('');
        $('#txtDespatchNo').val('@ViewBag.UniqueId');
    }

    $(function () {
        $('#txtInvoiceDate').datetimepicker({
            format: 'DD/MM/YYYY'
        });
        $('#txtDespatchDate').datetimepicker({
            format: 'DD/MM/YYYY'
        })
    });

    //$('#modal-xl button.close').click(function () {

    //    alert();
    //    location.href = location.href
    //});
    $('#modal-xl').on('hide.bs.modal', function () {
        location.href = location.href
    });


    var doc = new jsPDF();

    function saveDiv(divId, title) {
        doc.fromHTML(`<html><head><title>${title}</title></head><body>` + document.getElementById(divId).innerHTML + `</body></html>`);
        doc.save('div.pdf');
    }

    function printDiv(divId,title) {

        let mywindow = window.open('', 'PRINT', 'height=650,width=900,top=100,left=150');

        mywindow.document.write(`<html><head><title>${title}</title>`);
        mywindow.document.write('</head><body >');
        mywindow.document.write(document.getElementById(divId).innerHTML);
        mywindow.document.write('</body></html>');

        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/

        mywindow.print();
        mywindow.close();

        return true;
    }

</script>
<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>