@model DBOperation.Item

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    textarea {
        width: 100% !important;
        border: 1px solid #ced4da !important;
        border-radius: .25rem !important;
        padding: .375rem .75rem !important;
    }
</style>
<div class="content-wrapper">

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Product</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Master</a></li>
                        <li class="breadcrumb-item"><a href="#">Product</a></li>
                        <li class="breadcrumb-item active">Edit</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- jquery validation -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Product Details</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form id="quickForm">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="status">Status</label>
                                            @Html.HiddenFor(model => model.ItemId, new { htmlAttributes = new { @id = "ItemId" } })
                                            @Html.HiddenFor(model => model.IsActive, new { htmlAttributes = new { @id = "hdnUserStatus" } })
                                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus", @onChange = "fnStatusChange()" })
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="MaterialId">Material Type</label>
                                            @Html.HiddenFor(model => model.MaterialId, new { htmlAttributes = new { @id = "hdnMaterialId" } })
                                            @Html.DropDownList("MaterialId", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlMaterialId", @onChange = "fnValueChange('material')" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="status">Product Master Name</label>
                                            @Html.HiddenFor(model => model.TypeId, new { htmlAttributes = new { @id = "hdnTypeId" } })
                                            @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlTypeId", @onChange = "fnValueChange('type')" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="status">Parent Product Name</label>
                                            @Html.HiddenFor(model => model.ParentId, new { htmlAttributes = new { @id = "hdnItemId" } })
                                            @Html.DropDownList("ParentId", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlItemId", @onChange = "fnValueChange('item')" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="ItemName">Product Name</label>
                                            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @id = "txtItemName", @name = "ItemName" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="MinimumAvailableQuantity">MinimumAvailableQuantity</label>
                                            @Html.EditorFor(model => model.MinimumAvailableQuantity, new { htmlAttributes = new { @class = "form-control", @id = "txtMinimumAvailableQuantity", @name = "MinimumAvailableQuantity" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="status">Description</label>
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "txtDescription", @name = "Description" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.card-body -->
                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Submit</button> <button type="button" class="btn btn-danger">Cancel</button>
                                <button type="button" class="btn btn-outline-secondary" onclick="javascript:location.href='../List'" id="btnBack">Back to List</button>
                            </div>

                        </form>
                    </div>
                    <!-- /.card -->
                </div>

                <!--/.col (left) -->
                <!-- right column -->
                <div class="col-md-6">

                </div>
                <!--/.col (right) -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

<script>
    $(window).on('load', function () {

        if ('@ViewBag.AccessLevel' == "View") {
            $('#quickForm :input').each(function () {

                if ($(this).attr('Id') != 'btnBack') {

                    $(this).prop('disabled', true);
                }
            });
        }
    });

    $(function () {
        //
        $.validator.setDefaults({
            submitHandler: function () {

                // alert("Form successful submitted!");
                $("input[name=IsActive]").val(($('#ddlStatus').val() == '1' ? true : false));
                $("input[name=TypeId]").val($('#ddlTypeId').val());
                $("input[name=ParentId]").val($('#ddlTypeId').val());
                $("input[name=MaterialId]").val($('#ddlMaterialId').val());
                $("input[name=ParentId]").val($('#ddlItemId').val());
                fnSubmitItemDetails();
            }
        });
        $('#quickForm').validate({

            rules: {
                saleDate: {
                    required: true,
                },
                clientName: {
                    required: true,
                },
            },
            messages: {
                saleDate: {
                    required: "Please enter a email address",
                },
                clientName: {
                    required: "Please provide a password",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });

    function fnStatusChange() {
        $("input[name=IsActive]").val(($('#ddlStatus').val() == '1' ? true : false));

    }
    function fnValueChange(evntFrom) {

        $("input[name=TypeId]").val($('#ddlTypeId').val());
        $("input[name=MaterialId]").val($('#ddlMaterialId').val())
        $("input[name=ParentId]").val($('#ddlItemId').val());
        if (evntFrom == "material") {
            fnBindDropdown($("input[name=MaterialId]").val());
        }
        else if (evntFrom == "type") {

            fnBindItemsDropDown($("input[name=TypeId]").val());
            $("input[name=ParentId]").val($('#ddlItemId').val());
        }
    }
    function fnSubmitItemDetails() {
       
        var ItemsData = {
            ItemId: $('#ItemId').val(),
            TypeId: $("input[name=TypeId]").val(),
            ParentId: ($("input[name=ParentId]").val() != undefined && $("input[name=ParentId]").val() == '') ? 0 : $("input[name=ParentId]").val(),
            MaterialId: $("input[name=MaterialId]").val(),
            IsActive: $("input[name=IsActive]").val(),
            ItemName: $('#txtItemName').val(),
            Description: $('#txtDescription').val(),
            MinimumAvailableQuantity: $('#txtMinimumAvailableQuantity').val()
        };

        $.ajax({
            type: "POST",
            url: "/Items/Edit",
            data: JSON.stringify(ItemsData),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.status == "Success") {
                    alert(data.message);
                    window.location.href = data.redirectURL;
                }
                else {
                    alert(data.message);
                }
            },
            error: function () {
                alert("Error occured!!  " + data.message)
            }
        });
    }
    $("#mnuItemList").addClass("active");
    var parentMenu = $("#mnuItemList").parent().parent().parent();

    parentMenu.attr("class", "nav-item menu-is-opening menu-open");
    parentMenu.find("ul").each(function () {

        $(this).attr("style", "display:block");
    });
    function fnBindDropdown(id) {
        $.ajax({
            url: "/types/GetProductMaster?materialId=" + id,
            type: "Get",
            success: function (data) {

                $('#ddlTypeId').empty();
                for (var i = 0; i < data.length; i++) {
                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlTypeId').append(opt);

                }

            }

        });
    }
</script>
