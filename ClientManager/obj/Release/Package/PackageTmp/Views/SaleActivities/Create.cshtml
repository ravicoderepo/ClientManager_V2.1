@model DBOperation.SaleActivity

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Sale Activity</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="List">Sales</a></li>
                        <li class="breadcrumb-item active">New</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- jquery validation -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Sales Details </h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form id="quickForm">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="SaleDate">Call Date</label>
                                            <div class="input-group date" data-target-input="nearest">
                                                @Html.EditorFor(model => model.SaleDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtSaleDate", @name = "saleDate" } })
                                                <div class="input-group-append" data-target="#txtSaleDate" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="Status">Status</label>
                                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus",  @onChange= "fnToggleInvoiceFields()" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="Representative">Representative</label>
                                            @Html.DropDownList("Representative", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlRepresentative", @disabled= "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="ClientName">Customer Name</label>
                                            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @id = "txtClientName", @name = "clientName" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="ClientEmail">Customer Email</label>
                                            @Html.EditorFor(model => model.ClientEmail, new { htmlAttributes = new { @class = "form-control", @id = "txtClientEmail", @name = "clientEmail", @type = "email" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="ClientPhoneNo">Customer Phone No.</label>
                                            @Html.EditorFor(model => model.ClientPhoneNo, new { htmlAttributes = new { @class = "form-control", @id = "txtClientPhoneNo", @name = "clientPhoneNo" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="ProductName">Product Name</label>
                                            @*@Html.DropDownList("ProductName", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlProductName" })*@
                                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @id = "txtProductName", @name = "ProductName" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="Capacity">Capacity</label>
                                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @id = "txtCapacity" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="Unit">Unit</label>
                                            @*@Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control", @id = "txtUnit" } })*@
                                            @Html.DropDownList("Unit", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlUnit"})
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="RecentCallDate">Recent Call Date</label>
                                            <div class="input-group date" id="recentCallDate" data-target-input="nearest">
                                                @Html.EditorFor(model => model.RecentCallDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtRecentCallDate" } })
                                                <div class="input-group-append" data-target="#txtRecentCallDate" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="NoOfFollowUps">No. Of FollowUps</label>
                                            @Html.EditorFor(model => model.NoOfFollowUps, new { htmlAttributes = new { @class = "form-control", @id = "txtNoOfFollowUps", @disabled = "disabled" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="AnticipatedClosingDate">Anticipated Closing Date</label>
                                            <div class="input-group date" id="anticipatgedClosingDate" data-target-input="nearest">
                                                @Html.EditorFor(model => model.AnticipatedClosingDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtAnticipatedClosingDate" } })
                                                <div class="input-group-append" data-target="#txtAnticipatedClosingDate" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row" id="pnlInvoice">                                   
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="InvoiceNo">Invoice No.</label>
                                            @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control", @id = "txtInvoiceNo" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="InvoiceAmount">Invoice Amount</label>
                                            @Html.EditorFor(model => model.InvoiceAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtInvoiceAmount" } })
                                        </div>
                                    </div>
                                    
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="DateOfClosing">Closing Date</label>
                                            <div class="input-group date" id="txtClosingDate" data-target-input="nearest">
                                                @Html.EditorFor(model => model.DateOfClosing, new { htmlAttributes = new { @class = "form-control datetimepicker-input" } })
                                                <div class="input-group-append" data-target="#txtClosingDate" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="Remarks">Remarks</label>

                                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "txtRemarks" } })

                                        </div>
                                    </div>
                                </div>
                                <!-- /.card-body -->
                                <div class="card-footer">
                                    <button type="submit" class="btn btn-primary">Submit</button> <button type="button" onclick="" class="btn btn-danger">Cancel</button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="javascript:location.href='List'">Back to List</button>
                                </div>
                            </div>
                        </form>
                    </div>
                    <!-- /.card -->
                </div>

                <!--/.col (left) -->
                <!-- right column -->
                <div class="col-md-6">

                </div>
                <!--/.col (right) -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

<script>

    $(window).on('load', function () {
        $('#pnlInvoice').hide();
        //debugger;
        //if ($('#ddlStatus').val() == "6") {
        //    $('#pnlInvoice').show();
        //    //$("#quickForm :input").prop("disabled", true);
        //}
        //else {
        //    $('#pnlInvoice').hide();
        //}
    });

    //$(document).ready(function () {
    //    if ($('#ddlStatus').val() == "6") {
    //        $("#quickForm :input").prop("disabled", true);
    //    }
    //});

    $(function () {
        //debugger;
        $.validator.setDefaults({
            submitHandler: function () {
                debugger;
                // alert("Form successful submitted!");
                fnSubmitSaleDetails();
            }
        });
        $('#quickForm').validate({

            rules: {
                saleDate: {
                    required: true,
                },
                clientName: {
                    required: true,
                },
            },
            messages: {
                saleDate: {
                    required: "Please enter a email address",
                },
                clientName: {
                    required: "Please provide a password",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });

    //Date picker
    $('#txtSaleDate').datetimepicker({
        format: 'L'
    });
    $('#txtAnticipatedClosingDate').datetimepicker({
        format: 'L'
    });
    
    //$('#txtClosingDate').datetimepicker({
    //    format: 'L', useCurrent: true
    //});
    $('#txtRecentCallDate').datetimepicker({
        format: 'L'
    });
    $("body").on("click", ".datetimepickerClear", function (e) {
        e.preventDefault();
        var $datetimepicker = $(this).closest('.input-group.date');
        $datetimepicker.datetimepicker('clear');
    });

    function fnToggleInvoiceFields()
    {
        debugger;
        //6-Closed
        if ($('#ddlStatus').val() == "6") {
            $('#pnlInvoice').show();
        }
        else
        {
            $('#pnlInvoice').hide();
        }
    }

    function fnSubmitSaleDetails() {
        var SaleData = {
            SaleDate: $('#txtSaleDate').val(),
            SalesRepresentativeId: $('#ddlRepresentative').val(),
            Status: $('#ddlStatus').val(),
            ClientName: $('#txtClientName').val(),
            ClientEmail: $('#txtClientEmail').val(),
            ClientPhoneNo: $('#txtClientPhoneNo').val(),
            ProductName: $('#txtProductName').val(),
            Capacity: $('#txtCapacity').val(),
            Unit: $('#ddlUnit').val(),
            RecentCallDate: $('#txtRecentCallDate').val(),
            AnticipatedClosingDate: $('#txtAnticipatedClosingDate').val(),
            NoOfFollowUps: $('#txtNoOfFollowUps').val(),
            //InvoiceNo: $('#txtInvoiceNo').val(),
            //InvoiceAmount: $('#txtInvoiceNo').val(),
            //DateOfClosing: $('#txtClosingDate').val(),
            Remarks: $('#txtRemarks').val()
        };
        debugger;
        $.ajax({
            type: "POST",
            url: "/SaleActivities/Create",
            data: JSON.stringify(SaleData),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.status == "Success") {
                    alert(data.message);
                    window.location.href = data.redirectURL;
                }
                else {
                    alert(data.message);
                }

            },
            error: function () {
                alert("Error occured!!  " + data.message)
            }
        });
    }


</script>

