@model IEnumerable<DBOperation.SaleActivity>

@{
    var currentUser = (ClientManager.Models.UserDetails)Session["UserDetails"];
}

<style>
    table tr td:first-child {
        white-space: nowrap;
    }

    table thead tr th {
        white-space: nowrap;
    }
</style>

<table id="example1" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Action</th>
            <th>
                @*@Html.DisplayNameFor(model => model.SaleDate)*@
                Date of Call
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ClientName)*@
                Customer Name
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ClientEmail)*@
                Customer Email
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ClientPhoneNo)*@
                Customer Phone No.
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Product.ProductName)*@
                Product Name
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Capacity)*@
                Capacity
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Unit)*@
                Unit
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RecentCallDate)*@
                Recent Call Date
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.AnticipatedClosingDate)*@
                Anticipated Closing Date
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.NoOfFollowUps)*@
                No. Of Follow-Up
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Remarks)*@
                Remarks
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.CreatedOn)*@
                Created On
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.CreatedBy)*@
                Created By
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ModifiedOn)*@
                Modified On
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.ModifiedBy)*@
                Modified By
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.SalesStatu.Status)*@
                Status
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <button type="button" class="btn btn-primary btn-xs" title="Edit" onclick="javascript:location.href='/SaleActivities/Edit/@item.Id'"><i class="far fa-edit"></i></button>
                    @*<button type="button" class="btn btn-success btn-xs" title="View" onclick="javascript:location.href='/SaleActivities/Details/@item.Id'"><i class="fas fa-eye"></i></button>*@
                    @if (item.CreatedBy == currentUser.Id || currentUser.UserRoles.Any(wh => wh.RoleName.ToLower() == "admin"))
                    {
                        <button type="button" class="btn btn-danger btn-xs" title="Delete" onclick="fnSubmitSaleDetails(@item.Id)"><i class="far fa-trash-alt"></i></button>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SaleDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClientEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClientPhoneNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecentCallDate, "{0:MM/dd/yyyy}")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AnticipatedClosingDate, "{0:MM/dd/yyyy}")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoOfFollowUps)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User2.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User2.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SalesStatu.Status)
                </td>

            </tr>
        }
    </tbody>
    @*<tfoot>
            <tr>
                <th>Rendering engine</th>
                <th>Browser</th>
                <th>Platform(s)</th>
                <th>Engine version</th>
                <th>CSS grade</th>
            </tr>
        </tfoot>*@
</table>
<script>
    $(function () {
        $("#example1").DataTable({
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
        $('#example2').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
        });
    });

    function fnSubmitSaleDetails(id) {
        debugger;
        if (confirm("do you wish to delete this record?") == true) {
            debugger;
            $.ajax({
                type: "POST",
                url: "/SaleActivities/Delete/" + id,
                /*data: JSON.stringify(SaleData),*/
                //dataType: "json",
                //contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == "Success") {
                        alert(data.message);
                        window.location.href = data.redirectURL;
                    }
                    else {
                        alert(data.message);
                    }
                },
                error: function () {
                    alert("Error occured!!  " + data.message)
                }
            });
        }
    }
</script>