@model DBOperation.ExpenseTracker
@using System.Globalization;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var currentUser = (ClientManager.Models.UserDetails)Session["UserDetails"];
    string IsStoreAdmin = currentUser.UserRoles.Any(wh => wh.RoleName != "Store Admin").ToString().ToLower();
}

<style>
    textarea {
        width: 100% !important;
        border: 1px solid #ced4da !important;
        border-radius: .25rem !important;
        padding: .375rem .75rem !important;
    }

    .modal-dialog {
        width: 900px !important;
        margin: 30px auto !important;
    }
</style>
<div class="content-wrapper">

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Expense Tracker</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Accounts</a></li>
                        <li class="breadcrumb-item"><a href="#">Expense Tracker</a></li>
                        <li class="breadcrumb-item active">Edit</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <!-- left column -->
                <div class="col-md-12">
                    <!-- jquery validation -->
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Expense Tracker</h3>
                        </div>
                        <!-- /.card-header -->
                        <!-- form start -->
                        <form id="quickForm">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="ExpenseAmount">Expense Amount</label>
                                            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @id = "Id" } })
                                            @Html.EditorFor(model => model.ExpenseAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtExpenseAmount", @name = "ExpenseAmount", @style = "text-align:right !important" } })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="ExpenseDate">Expense Date</label>
                                            <div class="input-group date" data-target-input="nearest">
                                                @Html.EditorFor(model => model.ExpenseDate, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @id = "txtExpenseDate", @name = "ExpenseDate" } })
                                                <div class="input-group-append" data-target="#txtExpenseDate" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="ExpenseCategory">Expense Category</label>
                                            @Html.HiddenFor(model => model.ExpenseCategoryId, new { htmlAttributes = new { @id = "hdnExpenseCategoryId" } })
                                            @Html.DropDownList("ExpenseCategory", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlExpenseCategory", @onChange = "fnExpenseCategoryChange()" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="Status">Status</label>
                                            @Html.HiddenFor(model => model.Status, new { htmlAttributes = new { @id = "hdnStatus" } })
                                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control select2", @id = "ddlStatus", @onChange = "fnStatusChange()" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="Description">Description</label>
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "txtDescription", @name = "Description" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.card-body -->
                            <div class="card-footer">
                                @if ((currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin" || wh.RoleName == "Super User") && Model.Status == "Pending") || (currentUser.UserRoles.Any(wh => wh.RoleName == "Accounts Manager") && Model.Status == "Approved"))
                                {
                                    <button type="submit" class="btn btn-primary" id="btnSubmit">Submit</button>
                                    <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                                }

                                <button type="button" id="imageViewer" class="btn btn-dark">Document Viewer</button>
                                @if (currentUser.UserRoles.Any(wh => wh.RoleName == "Store Admin") && Model.Status == "Pending")
                                {
                                    <button type="button" id="btnDocument" class="btn btn-success" data-toggle="modal" data-target="#myModal">Document Upload</button>
                                }
                                <button type="button" class="btn btn-outline-secondary" onclick="javascript:location.href='../List'" id="btnBack">Back to List</button>
                            </div>

                        </form>
                    </div>
                    <!-- /.card -->
                </div>

                <!--/.col (left) -->
                <!-- right column -->
                <div class="col-md-6">

                </div>
                <!--/.col (right) -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>

<script>
    $(".btn-danger").click(function () {
        debugger;
        window.location.href = window.location.href;
    });
    $(window).on('load', function () {
        debugger;
        if ('@IsStoreAdmin' == 'true') {
            $('#quickForm :input').each(function () {
                debugger;
                $(this).prop('disabled', true);
                if ($(this).attr('Id') == 'btnBack' || $(this).attr('Id') == 'ddlStatus' || $(this).attr('Id') == 'btnSubmit' || $(this).attr('Id') == 'btnCancel' || $(this).attr('Id') == 'imageViewer') {
                    debugger;
                  
                    $(this).prop('disabled', false);
                }
            });
        }

        @*$('#txtExpenseAmount').prop("disabled", @IsStoreAdmin);
        $('#txtExpenseDate').prop("disabled", @IsStoreAdmin);
        $('#txtDescription').prop("disabled", @IsStoreAdmin));
        $('#ddlExpenseCategory').prop("disabled", @IsStoreAdmin);*@
    });

    //Date picker
    $('#txtExpenseDate').datetimepicker({
        format: 'DD/MM/YYYY'
    });

    $(function () {
        //debugger;
        $.validator.setDefaults({
            submitHandler: function () {
                debugger;
                // alert("Form successful submitted!");
                fnSubmitExpenseTrakerDetails();
            }
        });
        $('#quickForm').validate({

            rules: {
                saleDate: {
                    required: true,
                },
                clientName: {
                    required: true,
                },
            },
            messages: {
                saleDate: {
                    required: "Please enter a email address",
                },
                clientName: {
                    required: "Please provide a password",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
    });
    function fnStatusChange() {
        debugger;
        $("input[name=Status]").val($('#ddlStatus').val());
    }

    function fnExpenseCategoryChange() {
        debugger;
        $("input[name=ExpenseCategory]").val($('#ddlExpenseCategory').val());
    }

    function fnSubmitExpenseTrakerDetails() {
        debugger;
        var ExpenseTrakerData = {
            Id: $('#Id').val(),
            ExpenseAmount: $('#txtExpenseAmount').val(),
            ExpenseDate: $('#txtExpenseDate').val(),
            ExpenseCategoryId: $('#ddlExpenseCategory').val(),
            Status: $("input[name=Status]").val(),
            Description: $('#txtDescription').val()
        };
        debugger;
        $.ajax({
            type: "POST",
            url: "/ExpenseTrackers/Edit",
            data: JSON.stringify(ExpenseTrakerData),
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data.status == "Success") {
                    alert(data.message);
                    window.location.href = data.redirectURL;
                }
                else {
                    alert(data.message);
                }
            },
            error: function () {
                alert("Error occured!!  " + data.message)
            }
        });
    }
    $('#btnDocument').on('click', function () {
        $('.modal-body').load('/Documents/CreatePartial?docSource=ExpenseTracker&refRecId='+$('#Id').val(), function () {
            $('#myModal').modal({ show: true });
            $('#myModal').find('.modal-title').text("Document Management")
        });
    });
   /* $('#imageViewer').load('/Documents/ImageViewer');*/
    $('#imageViewer').on('click', function () {
        //$('.modal-body').load('/Documents/ImageViewer', function () {
        //    $('#myModal').modal({ show: true });
        //    $('#myModal').find('.modal-title').text("Document Viewer")
        //});
        var left = ($(window).width() / 2) - (900 / 2),
            top = ($(window).height() / 2) - (700 / 2),
            popup = window.open("/Documents/ImageViewer?docSource=Business Tracker&recRefId=" + $('#Id').val(), "Image Viewer", "width=900, height=700, top=" + top + ", left=" + left);
    });
    $("#mnuExpenceTracker").addClass("active");





</script>
